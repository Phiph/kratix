#!/usr/bin/env sh

set -x

# Read current values from the provided resource request
export name="$(yq eval '.spec.name' /kratix/input/object.yaml)"
export image="$(yq eval '.spec.image' /kratix/input/object.yaml)"
export db_driver="$(yq eval '.spec.dbDriver' /kratix/input/object.yaml)"
export contains_cc="$(yq eval '.spec.containsCreditCardData' /kratix/input/object.yaml)"
export db_name="${name}db"

export clusterLabels=""
[[ $contains_cc = 'true' ]] && export clusterLabels="pci=true"

if [ $db_driver = 'postgres' ]; then
  # set values that work with sample app at https://github.com/syntasso/sample-golang-app
  cat /tmp/transfer/postgresql-resource-request.yaml \
    | yq eval '.metadata.name = env(name)
      | .spec.dbName = env(db_name)
      | .metadata.annotations.destinationSelector = strenv(clusterLabels)' \
    > /kratix/output/postgresql-resource-request.yaml
fi

cat /tmp/transfer/redis-resource-request.yaml \
  | yq eval '.metadata.name = env(name)
  | .metadata.annotations.destinationSelector = strenv(clusterLabels)' \
  > /kratix/output/redis-resource-request.yaml

export message="Deployping app: ${name}"
if [ $contains_cc = 'true' ]; then
  cat /tmp/transfer/slack-resource-request.yaml \
    | yq eval '.metadata.name = env(name) | .spec.message = "Deploying app: " + env(name) + " to pci-secure environment"' \
    > /kratix/output/slack-resource-request.yaml
else
  cat /tmp/transfer/slack-resource-request.yaml \
    | yq eval '.metadata.name = env(name) | .spec.message = "Deploying app: " + env(name)' \
    > /kratix/output/slack-resource-request.yaml
fi

cat /tmp/transfer/deployment-resource-request.yaml \
  | yq eval '.metadata.name = env(name)
  | .spec.image = env(image)
  | .metadata.annotations.destinationSelector = strenv(clusterLabels)
  | .spec.containsCreditCardData = env(contains_cc)' \
  > /kratix/output/deployment-resource-request.yaml
